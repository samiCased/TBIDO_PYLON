# Generated by Django 4.2.11 on 2025-04-18 07:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the title of the announcement', max_length=200)),
                ('description', models.TextField(help_text='Enter the description of the announcement')),
                ('picture', models.ImageField(blank=True, help_text='Upload an image for the announcement', upload_to='announcement_pictures/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('ethnicityKey', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('ethnicityDescription', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='session_files/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='LineUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_logo', models.ImageField(blank=True, null=True, upload_to='lineup_team_logos/')),
                ('team_name', models.CharField(max_length=30)),
                ('member1_name', models.CharField(blank=True, max_length=255, null=True)),
                ('member1_age', models.IntegerField(blank=True, null=True)),
                ('member1_employment', models.CharField(blank=True, max_length=255, null=True)),
                ('member1_height', models.CharField(blank=True, max_length=255, null=True)),
                ('member1_rank', models.CharField(blank=True, max_length=255, null=True)),
                ('member1_employee_number', models.IntegerField(blank=True, null=True)),
                ('member1_amount_paid', models.IntegerField(blank=True, null=True)),
                ('member2_name', models.CharField(blank=True, max_length=255, null=True)),
                ('member2_age', models.IntegerField(blank=True, null=True)),
                ('member2_employment', models.CharField(blank=True, max_length=255, null=True)),
                ('member2_height', models.CharField(blank=True, max_length=255, null=True)),
                ('member2_rank', models.CharField(blank=True, max_length=255, null=True)),
                ('member2_employee_number', models.IntegerField(blank=True, null=True)),
                ('member2_amount_paid', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Logo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='pb_club_logo/')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('memberKey', models.AutoField(primary_key=True, serialize=False)),
                ('lastName', models.CharField(max_length=50)),
                ('firstName', models.CharField(max_length=50)),
                ('mobileNumber', models.BigIntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('employmentDate', models.DateField()),
                ('status', models.BooleanField(default=True)),
                ('IDPicture', models.ImageField(upload_to='member_id_pictures/')),
                ('pictureFullBody', models.ImageField(upload_to='member_full_body_pictures/')),
                ('occupation', models.CharField(max_length=20)),
                ('companyName', models.CharField(max_length=25)),
                ('affiliation', models.CharField(max_length=30)),
                ('age', models.IntegerField()),
                ('height', models.CharField(max_length=3)),
                ('salaryGrade', models.IntegerField()),
                ('address', models.CharField(max_length=70)),
                ('studentNumber', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('tin', models.CharField(max_length=12)),
                ('facultyRank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ethnicity')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='membershipType',
            fields=[
                ('membershipTypeKey', models.AutoField(primary_key=True, serialize=False)),
                ('membershipTypeName', models.CharField(max_length=10)),
                ('membershipTypeDescription', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='MentoringSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_topic', models.CharField(max_length=255)),
                ('session_time', models.DateTimeField()),
                ('cohort_name', models.CharField(max_length=255)),
                ('mentor_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MentoringSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cohort_name', models.CharField(max_length=100)),
                ('mentor_name', models.CharField(max_length=100)),
                ('session_rating', models.IntegerField()),
                ('date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('officerKey', models.AutoField(primary_key=True, serialize=False)),
                ('lastName', models.CharField(max_length=50)),
                ('firstName', models.CharField(max_length=50)),
                ('mobileNumber', models.BigIntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('employmentDate', models.DateField()),
                ('status', models.BooleanField(default=True)),
                ('IDPicture', models.ImageField(upload_to='officer_id_pictures/')),
                ('pictureFullBody', models.ImageField(upload_to='officer_full_body_pictures/')),
                ('occupation', models.CharField(max_length=20)),
                ('companyName', models.CharField(max_length=25)),
                ('affiliation', models.CharField(max_length=30)),
                ('age', models.IntegerField()),
                ('height', models.CharField(max_length=3)),
                ('salaryGrade', models.IntegerField()),
                ('address', models.CharField(max_length=70)),
                ('employeeNumber', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('tin', models.CharField(max_length=12)),
                ('facultyRank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ethnicity')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('player_picture', models.ImageField(upload_to='player_pictures/')),
                ('team_picture', models.ImageField(upload_to='team_logos/')),
                ('vs_team', models.CharField(max_length=100)),
                ('points', models.IntegerField()),
                ('field_goals', models.IntegerField()),
                ('free_throws', models.IntegerField()),
                ('assists', models.IntegerField()),
                ('rebounds', models.IntegerField()),
                ('steals', models.IntegerField()),
                ('blocks', models.IntegerField()),
                ('turnovers', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ProgressTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cohort_name', models.CharField(max_length=255)),
                ('learning_sessions_attended', models.IntegerField()),
                ('mentoring_sessions_completed', models.IntegerField()),
                ('submitted_requirements', models.IntegerField()),
                ('progress_percentage', models.IntegerField()),
                ('challenges_faced', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('requestKey', models.AutoField(primary_key=True, serialize=False)),
                ('requestDate', models.DateField()),
                ('requestStatus', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending'), ('approved', 'Approved')], default='active', max_length=10)),
                ('memberKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.member')),
                ('membershipTypeKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.membershiptype')),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SponsorPost',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Date', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='VideoPost',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Date', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TopPerformers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ranking', models.IntegerField()),
                ('progress_tracking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.progresstracking')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('sessionKey', models.AutoField(primary_key=True, serialize=False)),
                ('sessionDateKey', models.DateField()),
                ('sessionTimeKey', models.TimeField()),
                ('sessionStatus', models.CharField(choices=[('null', 'Null'), ('c', 'C'), ('ns', 'NS')], default='null', max_length=10)),
                ('sessionMaterialCovered', models.TextField()),
                ('approved_members', models.ManyToManyField(related_name='sessions', through='app.Request', to='app.member')),
                ('membershipTypeKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.membershiptype')),
                ('officerKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='app.officer')),
            ],
        ),
        migrations.CreateModel(
            name='SeasonGrouping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mentoring_schedules', models.ManyToManyField(blank=True, null=True, to='app.mentoringschedule')),
                ('mentoring_sessions', models.ManyToManyField(to='app.mentoringsession')),
                ('progress_tracking', models.ManyToManyField(to='app.progresstracking')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.season')),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('req_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('files', models.ManyToManyField(blank=True, related_name='requirements', to='app.file')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='requestNote',
            fields=[
                ('requestNoteKey', models.AutoField(primary_key=True, serialize=False)),
                ('requestNoteText', models.CharField(max_length=100)),
                ('requestKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.request')),
            ],
        ),
        migrations.AddField(
            model_name='request',
            name='sessionKey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.session'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='blog_pictures/')),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='related_picture', to='app.post')),
            ],
        ),
        migrations.CreateModel(
            name='PendingRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requestDate', models.DateTimeField(auto_now_add=True)),
                ('approvalType', models.CharField(default='pending', max_length=20)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.member')),
                ('sessionKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='officer_MembershipType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membershipTypeKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.membershiptype')),
                ('officerKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.officer')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='app.session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='member_MembershipType',
            fields=[
                ('memberMembershipTypeQuarter', models.BigIntegerField(primary_key=True, serialize=False)),
                ('memberKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.member')),
                ('membershipTypeKey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.membershiptype')),
            ],
        ),
        migrations.CreateModel(
            name='Invites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invite_code', models.IntegerField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('used', models.BooleanField(default=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.session')),
            ],
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('guestKey', models.AutoField(primary_key=True, serialize=False)),
                ('lastName', models.CharField(max_length=50)),
                ('firstName', models.CharField(max_length=50)),
                ('mobileNumber', models.BigIntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('employmentDate', models.DateField()),
                ('status', models.BooleanField(default=True)),
                ('IDPicture', models.ImageField(upload_to='guest_id_pictures/')),
                ('pictureFullBody', models.ImageField(upload_to='guest_full_body_pictures/')),
                ('occupation', models.CharField(max_length=20)),
                ('companyName', models.CharField(max_length=25)),
                ('affiliation', models.CharField(max_length=30)),
                ('age', models.IntegerField()),
                ('height', models.CharField(max_length=3)),
                ('salaryGrade', models.IntegerField()),
                ('address', models.CharField(max_length=70)),
                ('employeeNumber', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('tin', models.CharField(max_length=12)),
                ('facultyRank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ethnicity')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='file',
            name='requirement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='file_set', to='app.requirement'),
        ),
        migrations.AddField(
            model_name='file',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='app.session'),
        ),
        migrations.AddField(
            model_name='file',
            name='uploaded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.announcement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BestMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_name', models.CharField(blank=True, max_length=40, null=True)),
                ('member_picture', models.ImageField(blank=True, null=True, upload_to='best_member_photos/')),
                ('role', models.CharField(blank=True, max_length=128, null=True)),
                ('mentoring_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.mentoringsession')),
                ('season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.season')),
            ],
        ),
        migrations.CreateModel(
            name='ApprovedRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approvalDate', models.DateTimeField(auto_now_add=True)),
                ('pendingRequest', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.pendingrequest')),
            ],
        ),
        migrations.CreateModel(
            name='Advisory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(max_length=255)),
                ('task', models.TextField(blank=True, null=True)),
                ('details', models.TextField()),
                ('initial_date', models.DateTimeField()),
                ('deadline', models.DateTimeField()),
                ('calendar_plot_img', models.ImageField(blank=True, null=True, upload_to='advisory/calendar/')),
                ('gantt_plot_img', models.ImageField(blank=True, null=True, upload_to='advisory/gantt/')),
                ('session', models.ManyToManyField(to='app.session')),
            ],
            options={
                'verbose_name_plural': 'Advisories',
                'ordering': ['-initial_date'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='request',
            unique_together={('memberKey', 'sessionKey')},
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'post')},
            },
        ),
    ]
